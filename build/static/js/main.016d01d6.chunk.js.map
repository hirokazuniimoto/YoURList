{"version":3,"sources":["components/Drawer2.js","Header.js","logo.svg","components/Button.js","components/Card.js","components/Directorydialog.js","components/directorycreatebutton.js","components/DirectoryCreateForm.js","components/Directorylist.js","components/upload_btn.js","Main.js","reportWebVitals.js","reducers/directory.js","reducers.js","Store.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","SwipeableTemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","word","data","className","clsx","role","onClick","onKeyDown","List","ListItem","button","window","location","href","ListItemIcon","ListItemText","primary","i","length","localStorage","getItem","blob","Blob","link","document","createElement","URL","createObjectURL","today","Date","today_data","getFullYear","getMonth","getDate","getHours","getMinutes","download","click","save_date","Divider","map","Fragment","IconButton","edge","menuButton","color","aria-label","SwipeableDrawer","onClose","onOpen","theme","root","flexGrow","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","props","AppBar","style","Toolbar","Typography","variant","noWrap","margin","OutlinedButtons","Button","text","minWidth","bullet","transform","fontSize","pos","marginBottom","appBar","flex","Component","DirectoryCreateForm","inputdname","newdata","alertflag","erroralertflag","doChange","bind","doAction","e","this","target","value","hasOwnProperty","dname","preventDefault","directoryname","setItem","setTimeout","reload","Alert","severity","alert","class","noValidate","autoComplete","TextField","id","label","onChange","connect","Transition","forwardRef","ref","Slide","direction","dirnames","indexOf","push","Directorylist","inputtitle","inputurl","handleClose","setOpen","dirnametitle","pages","getdirnames","urltitle","geturltitle","urlerrorflag","doChange1","doChange2","doDelete","deletedirectory","dirname","split","pop","url","console","log","page","removeItem","replace","result","confirm","deletepages","deletepage","condition","handleClickOpen","marginTop","Dialog","fullScreen","TransitionComponent","autoFocus","secondary","urlopen","input","UploadButtons","accept","multiple","htmlFor","component","size","addEventListener","getElementById","evt","file","files","reader","FileReader","readAsText","onload","count","match","RegExp","index","data_1","substring","data_2","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initData","message","mode","fdata","DirectoryDletedeleteReduce","action","slice","splice","URLAddReduce","f","find","forEach","URLDleteReduce","URLFindReduce","combineReducers","directory","createStore","reducers","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.016d01d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function SwipeableTemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  let word = \"yourlistdateisdividedthisword\";\r\n  let data = \"\";\r\n  const save_date = () => {\r\n    for (var i = 0, length = localStorage.length; i < length; ++i) {\r\n    //console.log(localStorage.key(i));\r\n    //console.log(localStorage.getItem(localStorage.key(i)));\r\n\r\n    data += localStorage.key(i);\r\n    data += word;\r\n    data += localStorage.getItem(localStorage.key(i));\r\n    data += word;\r\n  }\r\n\r\n  let blob = new Blob([data],{type:\"text/plain\"});\r\n  let link = document.createElement('a');\r\n  link.href = URL.createObjectURL(blob);\r\n  var today = new Date();\r\n  let today_data = today.getFullYear()+\"/\"+(today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getHours()+\":\"+today.getMinutes()\r\n  link.download = 'Your_Data_'+ today_data +'.txt';\r\n  link.click();\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List >\r\n      <ListItem button key=\"Top\" onClick={()=>(window.location.href=\"\")}>\r\n        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Top\" />\r\n      </ListItem>\r\n      <ListItem button key=\"How to USE\" onClick={()=>(window.location.href=\"#howto\")}>\r\n        <ListItemIcon><ShowChartIcon /></ListItemIcon>\r\n        <ListItemText primary=\"How to USE\" />\r\n      </ListItem>\r\n      <ListItem button key=\"Directory\" onClick={()=>(window.location.href=\"#directory\")}>\r\n        <ListItemIcon><ListIcon /></ListItemIcon>\r\n        <ListItemText primary=\"List\" />\r\n      </ListItem>\r\n      <ListItem button key=\"Directory\" onClick={()=>save_date()}>\r\n        <ListItemIcon><SaveAltIcon /></ListItemIcon>\r\n        <ListItemText primary=\"Save Data\" />\r\n      </ListItem>\r\n      <ListItem button key='Producer' onClick={()=>(window.open(\"https://hirokazuniimoto.github.io/portfolio/\", '_blank'))}>\r\n        <ListItemIcon><LinkIcon /></ListItemIcon>\r\n        <ListItemText primary='Producer' />\r\n      </ListItem>\r\n        {/*\r\n          {['Top', 'How to USE', 'Directory', 'Producer'].map((text, index) => (\r\n            <ListItem button key={text} onClick={()=>(window.open(\"http://google.com\", '_blank'))}>\r\n              <ListItemIcon>{index % 2 === 0 ? <HomeIcon /> : <ShowChartIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        */}\r\n      </List>\r\n      {/*\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      */}\r\n      <Divider />\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n    {['left'].map((anchor) => (\r\n      <React.Fragment key={anchor}>\r\n        {/*<Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>*/}\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={toggleDrawer(anchor, true)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <SwipeableDrawer\r\n          anchor={anchor}\r\n          open={state[anchor]}\r\n          onClose={toggleDrawer(anchor, false)}\r\n          onOpen={toggleDrawer(anchor, true)}\r\n        >\r\n          {list(anchor)}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SwipeableTemporaryDrawer from './components/Drawer2';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"dtransparent\" style={{position:\"fixed\"}}>\r\n        <Toolbar style={{ color: \"black\" }}>\r\n        <SwipeableTemporaryDrawer />\r\n        {/*\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        */}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap style={{ color: \"black\" }}>\r\n            <a href=\"\" style={{color:\"black\"}}>YoURList</a>\r\n          </Typography>\r\n          {/*\r\n            <div className={classes.search} style={{ color: \"black\" }}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          */}\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"outlined\" color=\"primary\" style={{width:\"80%\"}}>\r\n      {props.text}\r\n      </Button>\r\n      {/*\r\n      <Button variant=\"outlined\" color=\"secondary\">\r\n        Secondary\r\n      </Button>\r\n      <Button variant=\"outlined\" disabled>\r\n        Disabled\r\n      </Button>\r\n      <Button variant=\"outlined\" color=\"primary\" href=\"#outlined-buttons\">\r\n        Link\r\n      </Button>\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div style={{width:\"80%\",display: \"inline-block\"}}>\r\n    <a>\r\n    <Card className={classes.root} variant=\"outlined\" style={{marginTop:\"20px\",backgroundColor:\"\",}}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom style={{margin:\"auto\"}}>\r\n          ディレクトリ名\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport SimpleCard from './Card.js';\r\nimport OutlinedButtons from './Button.js';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  //const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*<SimpleCard onClick={handleClickOpen} /> className={classes.appBar}  className={classes.title} */}\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={{width:\"80%\",height:\"80px\",fontSize:\"20px\"}}>\r\n        ディレクトリ名\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" >\r\n              ディレクトリ名\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              すべて開く\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              保存\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText primary=\"ページのタイトル\" secondary=\"ページのURL\" />\r\n            <OutlinedButtons text=\"開く\"/>\r\n            <OutlinedButtons text=\"消去\"/>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <ListItemText primary=\"ページのタイトル\" secondary=\"ページのURL\" />\r\n            <OutlinedButtons text=\"開く\"/>\r\n            <OutlinedButtons text=\"消去\"/>\r\n          </ListItem>\r\n          <Divider />\r\n          {/*\r\n            <ListItem>\r\n              <form noValidate autoComplete=\"off\">\r\n                <TextField id=\"standard-basic\" label=\"ディレクトリ名を入力\"  style={{width:\"100%\"}} />\r\n              </form>\r\n              <div class=\"mt-3\">\r\n              <Button variant=\"outlined\" color=\"primary\" style={{width:\"80%\"}} >\r\n                ディレクトリ作成\r\n              </Button>\r\n              </div>\r\n            </ListItem>\r\n          */}\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n\r\n        <div class=\"ml-3 mr-3 mt-5\" style={{}}>\r\n        <h5>新しくページを追加</h5>\r\n        <form class=\"mt-1\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"standard-basic\" label=\"ページのタイトルを入力\"  style={{width:\"100%\"}} />\r\n        </form>\r\n        <form class=\"mt-1\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"standard-basic\" label=\"URLを入力\"  style={{width:\"100%\"}} />\r\n        </form>\r\n        <div class=\"mt-4 mb-5\">\r\n        <Button variant=\"outlined\" color=\"primary\" style={{width:\"100%\"}} >\r\n          追加\r\n        </Button>\r\n        </div>\r\n        </div>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Directorycreatebutton extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  //className={classes.root}\r\n  render(){\r\n    return (\r\n      <div>\r\n      <Button variant=\"outlined\" color=\"primary\" style={{width:\"80%\"}}>\r\n      {this.props.text}\r\n      </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Directorycreatebutton ;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport OutlinedButtons from './Button'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createdirectory } from '../actions/directory';\r\n\r\nimport FullScreenDialog from './Directorydialog';\r\nimport Directorycreatebutton from './directorycreatebutton';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction mappingState(state){\r\n  return state;\r\n}\r\n\r\nclass DirectoryCreateForm extends Component {\r\n  inputdname = '';\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      alertflag:false,\r\n      erroralertflag:false,\r\n    }\r\n    this.doChange = this.doChange.bind(this);\r\n    this.doAction = this.doAction.bind(this);\r\n  }\r\n\r\n  doChange(e){\r\n    this.inputdname = e.target.value;\r\n    this.setState({\r\n      //directoryname: e.target.value\r\n    });\r\n  }\r\n\r\n  newdata = {};\r\n  doAction(e){\r\n    if(localStorage.hasOwnProperty(this.inputdname) || this.inputdname==\"\"){\r\n      this.setState({\r\n        alertflag:false,\r\n        erroralertflag:true,\r\n        dname:\"\",\r\n      });\r\n      return;\r\n    }else{\r\n      e.preventDefault();\r\n      this.setState({\r\n        directoryname: this.inputdname,\r\n        alertflag:true,\r\n        erroralertflag:true,\r\n        dname:\"\",\r\n        // /dirnames:[],\r\n\r\n      });\r\n      //let action = createdirectory(this.state.alertflag);\r\n      //this.props.dispatch({type:'DirectoryCreate'});\r\n      //this.props.dispatch(action);\r\n      localStorage.setItem(this.inputdname, \"newdir\");\r\n\r\n      setTimeout(() => {\r\n        window.location.reload(); // Execution 5sec\r\n      }, 2000);\r\n      }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div> {/*className={classes.root}*/}\r\n      {this.state.alertflag ?\r\n        <Alert severity=\"success\" style={{width:\"80%\",margin:\"0 auto\"}}>新規リスト「{this.state.directoryname}」を作成しました。</Alert>\r\n        :(this.state.erroralertflag ?\r\n        <Alert severity=\"error\" style={{width:\"80%\",margin:\"0 auto\"}}>同名のリストが存在するかリスト名に問題があります。</Alert>\r\n        :<p></p>)\r\n      }\r\n      {alert}\r\n      <form class=\"mt-4\" noValidate autoComplete=\"off\">\r\n        <TextField id=\"standard-basic\" label=\"リスト名を入力\" onChange={this.doChange} style={{width:\"80%\"}} />\r\n      </form>\r\n      <div class=\"mt-3\">\r\n        {/*\r\n          <Directorycreatebutton text=\"ディレクトリ作成\" />\r\n        */}\r\n        <Button variant=\"outlined\" color=\"primary\" style={{width:\"80%\"}} onClick={this.doAction}>\r\n          リスト作成\r\n        </Button>\r\n      </div>\r\n      {/*<FullScreenDialog onClick={this.doAction}/>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDirectoryCreateForm = connect(mappingState)(DirectoryCreateForm);\r\n\r\nexport default connect((state)=>state)(DirectoryCreateForm);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SimpleCard from './Card.js';\r\nimport OutlinedButtons from './Button.js';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Component } from 'react';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nfunction mappingState(state){\r\n  return state;\r\n}\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nlet dirnames = [];\r\nfor( let i = 0; i < localStorage.length; i++ ){\r\n   var key = localStorage.key(i);\r\n   if(localStorage.getItem(key).indexOf(\"newdir\")!=-1){\r\n     dirnames.push(key)\r\n   }\r\n}\r\n/*\r\nlet listpage =\"\";\r\nfunction makelist(data){\r\n  try {\r\n    for (var i = 0; i < data.length; i++) {\r\n      listpage+=(\r\n        <div>\r\n        <ListItem>\r\n          <ListItemText primary={data[i]} secondary={data[i+1]} />\r\n          <OutlinedButtons text=\"開く\"/>\r\n          <OutlinedButtons text=\"消去\"/>\r\n        </ListItem>\r\n        <Divider />\r\n        </div>\r\n      )\r\n      i++;\r\n    }\r\n    console.log(listpage);\r\n\r\n    return listpage;\r\n  } catch (e) {\r\n  }\r\n}*/\r\n\r\nclass Directorylist extends Component {\r\n  inputtitle = '';\r\n  inputurl = '';\r\n  //data = [];\r\n  data={};\r\n\r\n  style={\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      //marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      dirnametitle:\"\",\r\n      pages:[],\r\n      dirnames:this.getdirnames(),\r\n      urltitle:this.geturltitle(),\r\n      urlerrorflag:false,\r\n    }\r\n    this.doChange1 = this.doChange1.bind(this);\r\n    this.doChange2 = this.doChange2.bind(this);\r\n    this.doAction = this.doAction.bind(this);\r\n    this.doDelete = this.doDelete.bind(this);\r\n    this.deletedirectory = this.deletedirectory.bind(this);\r\n    this.getdirnames = this.getdirnames.bind(this);\r\n    this.geturltitle = this.geturltitle.bind(this);\r\n  }\r\n\r\n  getdirnames(){\r\n    let dirnames = [];\r\n    for( let i = 0; i < localStorage.length; i++ ){\r\n       var key = localStorage.key(i);\r\n       if(localStorage.getItem(key).indexOf(\"newdir\")!=-1){\r\n         dirnames.push(key)\r\n       }\r\n    }\r\n    return dirnames;\r\n  }\r\n\r\n  geturltitle(dirname){\r\n    try {\r\n      this.pages = localStorage.getItem(dirname).split(',');\r\n      this.pages.pop();\r\n    } catch (e) {\r\n      this.pages = [];\r\n    }\r\n    return this.pages;\r\n  }\r\n\r\n\r\n  doChange1(e){\r\n    this.inputtitle = e.target.value;\r\n    this.setState({\r\n    });\r\n  }\r\n\r\n  doChange2(e){\r\n    this.inputurl = e.target.value;\r\n    this.setState({\r\n    });\r\n  }\r\n\r\n  doAction(e){\r\n    if(localStorage.hasOwnProperty(this.inputtitle) || this.inputtitle==\"\" || this.inputtitle==\"newdir\"){\r\n      this.setState({\r\n        alertflag:false,\r\n        erroralertflag:true,\r\n        dname:\"\",\r\n      });\r\n      return;\r\n    }else{\r\n      this.setState({\r\n        title: this.inputtitle,\r\n        url: this.inputurl,\r\n        alertflag:true,\r\n        erroralertflag:true,\r\n        dname:\"\",\r\n        dirnames:this.getdirnames(),\r\n        //pages:this.geturltitle(this.state.dirnametitle),\r\n      });\r\n      console.log(this.state.pages);\r\n      this.data=[this.inputtitle,this.inputurl];\r\n      this.data=[this.inputtitle];\r\n      this.value = localStorage.getItem(this.state.dirnametitle);\r\n      this.data.push(this.value);\r\n      //localStorage.setItem(this.state.dirnametitle,this.data);\r\n      localStorage.setItem(this.state.dirnametitle,this.data);\r\n      localStorage.setItem(this.inputtitle,this.inputurl);\r\n\r\n      try {\r\n        this.state.pages = localStorage.getItem(this.state.dirnametitle).split(',');\r\n        this.state.pages.pop();\r\n      } catch (e) {\r\n        this.state.pages = [];\r\n      }\r\n      //localStorage.setItem(this.state.dirnametitle, JSON.stringify(this.data));\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  doDelete(page){\r\n    localStorage.removeItem(page);\r\n    this.value=localStorage.getItem(this.state.dirnametitle);\r\n    page=page+\",\";\r\n    this.value=this.value.replace(page,\"\");\r\n    localStorage.setItem(this.state.dirnametitle,this.value);\r\n    try {\r\n      this.state.pages = localStorage.getItem(this.state.dirnametitle).split(',');\r\n      this.state.pages.pop();\r\n    } catch (e) {\r\n      this.state.pages = [];\r\n    }\r\n    this.setState({\r\n    });\r\n  }\r\n\r\n  deletedirectory(e){\r\n    this.result = window.confirm(\"本当に消去してもよろしいですか？\")\r\n    if(this.result){\r\n      this.deletepages = localStorage.getItem(this.state.dirnametitle).split(',');\r\n      this.deletepages.pop();\r\n      this.deletepages.map((deletepage)=>{\r\n        localStorage.removeItem(deletepage);\r\n      })\r\n      localStorage.removeItem(this.state.dirnametitle);\r\n      this.setState({\r\n        open:false,\r\n      });\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  setOpen(condition){\r\n    this.setState({\r\n      open:condition,\r\n    });\r\n  }\r\n\r\n  urlopen(url){\r\n    if(url.indexOf('http://') != -1 || url.indexOf('https://') != -1){\r\n      window.open(url, '_blank');\r\n    }else{\r\n      this.setState({\r\n        urlerrorflag:true,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClickOpen(dirname) {\r\n    this.setState({\r\n      open:true,\r\n      dirnametitle:dirname,\r\n    });\r\n    //this.state.pages = JSON.parse(localStorage.getItem(this.state.dirnametitle));\r\n    try {\r\n      this.state.pages = localStorage.getItem(dirname).split(',');\r\n      this.state.pages.pop();\r\n    } catch (e) {\r\n      this.state.pages = [];\r\n    }\r\n    //console.log(this.state.pages);\r\n\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n      {this.state.dirnames.map((dirname) =>\r\n        <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleClickOpen(dirname)} style={{width:\"80%\",height:\"40px\",fontSize:\"20px\",marginTop:\"20px\"}}>\r\n          {dirname}\r\n        </Button>\r\n\r\n        </div>\r\n      )}\r\n      <Dialog fullScreen open={this.state.open} onClose={this.handleClose} TransitionComponent={Transition}>\r\n        <AppBar style={this.style.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" style={this.style.title}>\r\n              {this.state.dirnametitle}\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={this.deletedirectory}>\r\n              リスト消去\r\n            </Button>\r\n            <Button autoFocus color=\"inherit\" onClick={this.handleClose}>\r\n              保存\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.state.alertflag ?\r\n          <Alert severity=\"success\" style={{width:\"100%\",margin:\"10 auto\",marginTop:\"20px\"}}>新規ページ「{this.state.title}」を追加しました。</Alert>\r\n          :(this.state.erroralertflag ?\r\n          <Alert severity=\"error\" style={{width:\"100%\",margin:\"10 auto\",marginTop:\"20px\"}}>同名のページタイトルが存在するかページタイトルに問題があります。</Alert>\r\n          :<p></p>)\r\n        }\r\n\r\n        {this.state.urlerrorflag ?\r\n          <Alert severity=\"error\" style={{width:\"100%\",margin:\"10 auto\",marginTop:\"20px\"}}>ページを開けませんでした。入力されたURLが間違っていないか確認してください。</Alert>\r\n          :<p></p>\r\n        }\r\n\r\n\r\n        <div class=\"ml-3 mr-3 mt-4\" style={{}}>\r\n        <h5>新しくページを追加</h5>\r\n        <form class=\"mt-1\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"standard-basic\" label=\"ページのタイトルを入力\" onChange={this.doChange1} style={{width:\"100%\"}} />\r\n        </form>\r\n        <form class=\"mt-1\" noValidate autoComplete=\"off\">\r\n          <TextField id=\"standard-basic\" label=\"URLを入力\" onChange={this.doChange2} style={{width:\"100%\"}}/>\r\n        </form>\r\n        <div class=\"mt-4 mb-5\">\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.doAction} style={{width:\"100%\"}} >\r\n          追加\r\n        </Button>\r\n        </div>\r\n        </div>\r\n\r\n        <List>\r\n        <Divider />\r\n        {\r\n          this.state.pages.map((page) =>(\r\n            <div>\r\n            <ListItem>\r\n              <ListItemText primary={page} secondary={localStorage.getItem(page)} />\r\n              <a onClick={() => this.urlopen(localStorage.getItem(page))} ><OutlinedButtons text=\"開く\" /></a>\r\n              <a onClick={() => this.doDelete(page)}><OutlinedButtons text=\"消去\"/></a>\r\n            </ListItem>\r\n            <Divider />\r\n            </div>\r\n          )\r\n        )\r\n        }\r\n        <div>\r\n        {/*\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => this.handleClickOpen(\"lkdsjf\")} style={{width:\"80%\",height:\"80px\",fontSize:\"20px\",marginTop:\"20px\"}}>\r\n            dfafd\r\n          </Button>\r\n        */}\r\n\r\n\r\n        </div>\r\n\r\n        </List>\r\n\r\n      </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state)=>state)(Directorylist);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nwindow.addEventListener('load', () => {\r\n      try {\r\n        const f = document.getElementById('contained-button-file');\r\n        f.addEventListener('change', evt => {\r\n          const input = evt.target;\r\n\r\n          const file = input.files[0];\r\n          const reader = new FileReader();\r\n          reader.readAsText(file);\r\n\r\n          reader.onload = () => {\r\n            console.log(reader.result);\r\n\r\n            let data = reader.result;\r\n            let word = \"yourlistdateisdividedthisword\";\r\n\r\n            //ローカルストレージに保存するデータ数を取得\r\n            var count = ( data.match( new RegExp( word, \"g\" ) ) || [] ).length/2;\r\n            if(count == 0){\r\n              alert(\"適切なファイルを選択してください。\");\r\n              return;\r\n            }\r\n            for (var i = 0; i < count; i++) {\r\n              console.log(i+1);\r\n              // 1．基準となる文字列の位置を取得\r\n            \tvar index = data.indexOf(word);\r\n            \t// 2．基準文字列から前の文字列を切り出して表示\r\n            \tlet data_1 = data.substring(0, index);\r\n              data = data.replace( data_1 , \"\" )\r\n              data = data.replace( word,\"\" )\r\n\r\n              var index = data.indexOf(word);\r\n              let data_2 = data.substring(0, index);\r\n              data = data.replace( data_2 , \"\" )\r\n              data = data.replace( word,\"\" )\r\n              console.log(data_1);\r\n              console.log(data_2);\r\n              localStorage.setItem(data_1, data_2);\r\n            }\r\n\r\n            setTimeout(() => {\r\n              alert(\"データをインポートしました。\");\r\n              window.location.reload(); // Execution 5sec\r\n            }, 100);\r\n          };\r\n          });\r\n      } catch (e) {\r\n        alert(\"アップロードエラー\");\r\n      }\r\n  });\r\n\r\n\r\nexport default function UploadButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n      <input\r\n        accept=\"txt/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        /*onChange = {() =>upload_data()}*/\r\n      />\r\n      <label htmlFor=\"contained-button-file\" >\r\n        <Button variant=\"contained\" color=\"primary\"\r\n        component=\"span\"\r\n        size=\"large\"\r\n        >\r\n          データファイルをアップロード\r\n        </Button>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Button, ButtonProps } from \"@material-ui/core/\";\r\nimport DirectoryCreateForm from './components/DirectoryCreateForm';\r\nimport OutlinedButtons from './components/Button'\r\nimport SimpleCard from './components/Card';\r\n//import FullScreenDialog from './components/Directorydialog';\r\nimport { connect } from 'react-redux';\r\nimport { Component } from 'react';\r\nimport Directorylist from './components/Directorylist';\r\nimport UploadButtons from './components/upload_btn';\r\n\r\n\r\nclass Main extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n      <h1 class=\"text-center mt-5 mb-4\"><span class=\"marker-animation\">データの引継ぎ</span></h1>\r\n      <h5 >ブラウザのURLデータを引き継ぐことができます。</h5>\r\n      <h5 style={{marginTop:\"0px\",marginBottom:\"40px\"}}>\r\n      <br />\r\n      ・　データのエクスポート\r\n      <p></p>\r\n\r\n      このブラウザのデータを引き継ぐ場合はメニューの「Save Data」からデータファイルをダウンロードして保存してください。\r\n      <br />\r\n      <p></p>\r\n      ・　データのインポート\r\n      <br />\r\n      <p></p>\r\n      下のボタンから、別のブラウザでダウンロードしたファイルをアップロードしてください。\r\n      アップロードしたファイルはサーバーには保存されません。</h5>\r\n      <UploadButtons />\r\n      <h1 class=\"text-center mt-5 mb-4\"><span class=\"marker-animation\">リストの作成</span></h1>\r\n      <DirectoryCreateForm />\r\n      <a id=\"directory\"></a>\r\n      <h1 class=\"text-center mt-5 mb-4\"><span class=\"marker-animation\">リスト一覧</span></h1>\r\n      <Directorylist />\r\n      {/*<SimpleCard />*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state)=>state)(Main);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initData = {\r\n  data:{}, //\r\n  message:'please type message:',\r\n  mode:'default',\r\n  fdata:[],\r\n  alertflag:false,\r\n  erroralertflag:false,\r\n};\r\n\r\nexport function directory(state = initData, action) {\r\n  switch (action.type) {\r\n    case 'DirectoryCreate':\r\n      return DirectoryCreateReduce(state, action);\r\n\r\n    case 'DirectoryDELETE':\r\n      return DirectoryDletedeleteReduce(state, action);\r\n\r\n    case 'URLFIND':\r\n      return URLFindReduce(state, action);\r\n\r\n    case 'URLADD':\r\n      return URLAddReduce(state, action);\r\n\r\n    case 'URLDELETE':\r\n      return URLDleteReduce(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//ディレクトリのレデュース処理\r\nfunction DirectoryCreateReduce(state, action){\r\n  return {\r\n    // /data:newdata,\r\n    message:'Added!',\r\n    mode:'default',\r\n    fdata:[],\r\n    alertflag:true\r\n  };\r\n}\r\n\r\nfunction DirectoryDletedeleteReduce(state, action){\r\n  let newdata = state.data.slice();\r\n  newdata.splice(action.index, 1);\r\n  return {\r\n    data:newdata,\r\n    message:'delete \"' + action.index + '\":',\r\n    mode:'delete',\r\n    fdata:[]\r\n  }\r\n}\r\n\r\nfunction URLAddReduce(state, action){\r\n  let f = action.find;\r\n  let fdata = [];\r\n  state.data.forEach((value)=>{\r\n    if (value.message.indexOf(f) >= 0){\r\n      fdata.push(value);\r\n    }\r\n  });\r\n  return {\r\n    data:state.data,\r\n    message:'find \"' + f + '\":',\r\n    mode:'find',\r\n    fdata:fdata,\r\n  };\r\n}\r\n\r\nfunction URLDleteReduce(state, action){\r\n  let f = action.find;\r\n  let fdata = [];\r\n  state.data.forEach((value)=>{\r\n    if (value.message.indexOf(f) >= 0){\r\n      fdata.push(value);\r\n    }\r\n  });\r\n  return {\r\n    data:state.data,\r\n    message:'find \"' + f + '\":',\r\n    mode:'find',\r\n    fdata:fdata\r\n  };\r\n}\r\n\r\nfunction URLFindReduce(state, action){\r\n  let f = action.find;\r\n  let fdata = [];\r\n  state.data.forEach((value)=>{\r\n    if (value.message.indexOf(f) >= 0){\r\n      fdata.push(value);\r\n    }\r\n  });\r\n  return {\r\n    data:state.data,\r\n    message:'find \"' + f + '\":',\r\n    mode:'find',\r\n    fdata:fdata\r\n  };\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {directory} from \"./reducers/directory.js\";\r\n\r\nexport default combineReducers({\r\n  directory\r\n});\r\n","import { createStore } from 'redux';\r\nimport reducers from \"./reducers.js\";\r\n\r\n// ストアを作成\r\nexport default createStore(reducers);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SearchAppBar from './Header';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n//import PersistentDrawerLeft from './Drawer';\nimport store from './Store';\nimport  {Provider}  from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SearchAppBar />\n  </React.StrictMode>,\n  document.getElementById('header')\n);\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <Main />\n  </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}